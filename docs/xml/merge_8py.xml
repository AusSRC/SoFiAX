<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="merge_8py" kind="file" language="Python">
    <compoundname>merge.py</compoundname>
    <innernamespace refid="namespacesrc_1_1merge">src::merge</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>random</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>xmltodict</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>datetime<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>datetime</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>sofiax.schema<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Run,<sp/>Instance</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>sofiax.utils.sql<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>db_instance_upsert,<sp/>\</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>db_detection_insert,<sp/>db_source_match,<sp/>\</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>db_delete_detection,<sp/>db_update_detection_unresolved</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>sofiax.utils.io<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>_get_parameter,<sp/>_get_output_filename,<sp/>\</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>_get_file_bytes</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>sofiax.utils.calcs<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>_percentage_difference</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">sanity_check(flux:<sp/>tuple,<sp/>spatial_extent:<sp/>tuple,<sp/>spectral_extent:<sp/>tuple,<sp/>sanity_thresholds:<sp/>dict):</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Compare<sp/>flux<sp/>values,<sp/>spatial<sp/>and<sp/>spectral<sp/>extent<sp/>between<sp/>two<sp/>detections</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>that<sp/>have<sp/>been<sp/>classified<sp/>as<sp/>a<sp/>match.<sp/>If<sp/>values<sp/>are<sp/>unreasonable,<sp/>return</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>False.<sp/>Otherwise,<sp/>return<sp/>True.</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flux<sp/>(tuple)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Flux<sp/>values<sp/>to<sp/>compare</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spatial_extent<sp/>(tuple)<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Spatial<sp/>extent<sp/>of<sp/>detections<sp/>to<sp/>compare</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spectral_extent<sp/>(tuple)<sp/><sp/><sp/><sp/><sp/>-<sp/>Spectral<sp/>extent<sp/>of<sp/>detections<sp/>to<sp/>compare</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sanity_thresholds<sp/>(dict)<sp/><sp/><sp/><sp/>-<sp/>Sanity<sp/>threshold<sp/>dictated<sp/>by<sp/>the<sp/>Run?</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns<sp/>(bool):</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>True<sp/><sp/>-<sp/>Detection<sp/>passes<sp/>sanity<sp/>check.</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>False<sp/>-<sp/>Requires<sp/>manual<sp/>separation,<sp/>add</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref<sp/>to<sp/>UnresolvedDetection</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compare<sp/>flux<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>f1,<sp/>f2<sp/>=<sp/>flux</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>flux_difference<sp/>=<sp/>_percentage_difference(f1,<sp/>f2)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>flux_difference<sp/>&gt;<sp/>sanity_thresholds[</highlight><highlight class="stringliteral">&apos;flux&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compare<sp/>spatial<sp/>extent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>min_extent,<sp/>max_extent<sp/>=<sp/>sanity_thresholds[</highlight><highlight class="stringliteral">&apos;spatial_extent&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>max1,<sp/>max2,<sp/>min1,<sp/>min2<sp/>=<sp/>spatial_extent</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>max_diff<sp/>=<sp/>_percentage_difference(max1,<sp/>max2)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>min_diff<sp/>=<sp/>_percentage_difference(min1,<sp/>min2)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_diff<sp/>&gt;<sp/>max_extent)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(min_diff<sp/>&gt;<sp/>min_extent):</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compare<sp/>spectral<sp/>extent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>min_extent,<sp/>max_extent<sp/>=<sp/>sanity_thresholds[</highlight><highlight class="stringliteral">&apos;spectral_extent&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>max1,<sp/>max2,<sp/>min1,<sp/>min2<sp/>=<sp/>spectral_extent</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>max_diff<sp/>=<sp/>_percentage_difference(max1,<sp/>max2)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>min_diff<sp/>=<sp/>_percentage_difference(min1,<sp/>min2)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_diff<sp/>&gt;<sp/>max_extent)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(min_diff<sp/>&gt;<sp/>min_extent):</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">async<sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">merge_match_detection(conn,<sp/>run:<sp/>Run,<sp/>instance:<sp/>Instance,<sp/>cwd:<sp/>str):</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Strategy<sp/>for<sp/>handling<sp/>new<sp/>detections.<sp/>If<sp/>a<sp/>match<sp/>is<sp/>identified<sp/>with</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>existing<sp/>database<sp/>entries,<sp/>updates<sp/>are<sp/>automatically<sp/>applied<sp/>based<sp/>on</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>heuristics<sp/>implemented<sp/>in<sp/>the<sp/>body<sp/>of<sp/>this<sp/>function<sp/>(no<sp/>return).</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>If<sp/>there<sp/>is<sp/>no<sp/>match<sp/>the<sp/>detection<sp/>is<sp/>merged<sp/>by<sp/>default.</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Database<sp/>connection<sp/>object</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>run<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Run<sp/>object...</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance<sp/><sp/><sp/><sp/>Instance<sp/>object...</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cwd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Current<sp/>working<sp/>directory.</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Retrieve<sp/>output<sp/>catalogue<sp/>of<sp/>SoFiA<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>output_dir<sp/>=<sp/>_get_parameter(</highlight><highlight class="stringliteral">&apos;output.directory&apos;</highlight><highlight class="normal">,<sp/>instance.params,<sp/>cwd)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>output_filename<sp/>=<sp/>_get_output_filename(instance.params,<sp/>cwd)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>vo_table<sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;{output_dir}/{output_filename}_cat.xml&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>content<sp/>=<sp/>await<sp/>_get_file_bytes(vo_table,<sp/>mode=</highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>cat<sp/>=<sp/>xmltodict.parse(content)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Getting<sp/>instance<sp/>metadata<sp/>from<sp/>outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>run_date<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>NOTE(austin):<sp/>why<sp/>enumerate?<sp/>Could<sp/>just<sp/>go<sp/>&quot;for<sp/>j<sp/>in<sp/>cat[...]&quot;?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_,<sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(cat[</highlight><highlight class="stringliteral">&apos;VOTABLE&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;RESOURCE&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;PARAM&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>j[</highlight><highlight class="stringliteral">&apos;@name&apos;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;Time&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>run_date<sp/>=<sp/>j[</highlight><highlight class="stringliteral">&apos;@value&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>run_date<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>AttributeError(</highlight><highlight class="stringliteral">&apos;Run<sp/>date<sp/>not<sp/>found<sp/>in<sp/>votable&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_,<sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(cat[</highlight><highlight class="stringliteral">&apos;VOTABLE&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;RESOURCE&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;PARAM&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>j[</highlight><highlight class="stringliteral">&apos;@name&apos;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;Creator&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance.version<sp/>=<sp/>j[</highlight><highlight class="stringliteral">&apos;@value&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>instance.run_date<sp/>=<sp/>datetime.strptime(run_date,<sp/></highlight><highlight class="stringliteral">&apos;%a,<sp/>%d<sp/>%b<sp/>%Y,<sp/>%H:%M:%S&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>instance.reliability_plot<sp/>=<sp/>await<sp/>_get_file_bytes(f</highlight><highlight class="stringliteral">&quot;{output_dir}/{output_filename}_rel.eps&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>instance<sp/>=<sp/>await<sp/>db_instance_upsert(conn,<sp/>instance)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>detect_names<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>fields<sp/>=<sp/>cat[</highlight><highlight class="stringliteral">&apos;VOTABLE&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;RESOURCE&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;TABLE&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;FIELD&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_,<sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(fields):</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detect_names.append(j[</highlight><highlight class="stringliteral">&apos;@name&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Iterate<sp/>through<sp/>content<sp/>of<sp/>the<sp/>output<sp/>catalogue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>header<sp/>of<sp/>the<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>tr<sp/>=<sp/>cat[</highlight><highlight class="stringliteral">&apos;VOTABLE&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;RESOURCE&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;TABLE&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;DATA&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;TABLEDATA&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;TR&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(tr,<sp/>list):</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr<sp/>=<sp/>[tr]</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_,<sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(tr):</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detect_dict<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>row<sp/>of<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>item<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(j[</highlight><highlight class="stringliteral">&apos;TD&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detect_dict[detect_names[i]]<sp/>=<sp/>float(item)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ValueError:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detect_dict[detect_names[i]]<sp/>=<sp/>item</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>only<sp/>check<sp/>0<sp/>or<sp/>4<sp/>flagged<sp/>detections,<sp/>throw<sp/>the<sp/>others<sp/>away</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>automatic<sp/>flags<sp/>set<sp/>on<sp/>the<sp/>data<sp/>(in<sp/>the<sp/>catalogue)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>detect_dict[</highlight><highlight class="stringliteral">&apos;flag&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>flag<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[0,<sp/>4]:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>remove<sp/>id<sp/>from<sp/>detection<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detect_id<sp/>=<sp/>int(detect_dict[</highlight><highlight class="stringliteral">&apos;id&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>detect_dict[</highlight><highlight class="stringliteral">&apos;id&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>adjust<sp/>x,<sp/>y,<sp/>z<sp/>to<sp/>absolute<sp/>terms<sp/>based<sp/>on<sp/>region<sp/>applied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detect_dict[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">]<sp/>=<sp/>detect_dict[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">]<sp/>+<sp/>instance.boundary[0]</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detect_dict[</highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">]<sp/>=<sp/>detect_dict[</highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">]<sp/>+<sp/>instance.boundary[2]</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detect_dict[</highlight><highlight class="stringliteral">&apos;z&apos;</highlight><highlight class="normal">]<sp/>=<sp/>detect_dict[</highlight><highlight class="stringliteral">&apos;z&apos;</highlight><highlight class="normal">]<sp/>+<sp/>instance.boundary[4]</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Individual<sp/>products<sp/>for<sp/>each<sp/>detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_filename<sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;{output_dir}/{output_filename}_cubelets/{output_filename}_{detect_id}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube_bytes<sp/>=<sp/>await<sp/>_get_file_bytes(f</highlight><highlight class="stringliteral">&quot;{base_filename}_cube.fits&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask_bytes<sp/>=<sp/>await<sp/>_get_file_bytes(f</highlight><highlight class="stringliteral">&quot;{base_filename}_mask.fits&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mom0_bytes<sp/>=<sp/>await<sp/>_get_file_bytes(f</highlight><highlight class="stringliteral">&quot;{base_filename}_mom0.fits&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mom1_bytes<sp/>=<sp/>await<sp/>_get_file_bytes(f</highlight><highlight class="stringliteral">&quot;{base_filename}_mom1.fits&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mom2_bytes<sp/>=<sp/>await<sp/>_get_file_bytes(f</highlight><highlight class="stringliteral">&quot;{base_filename}_mom2.fits&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chan_bytes<sp/>=<sp/>await<sp/>_get_file_bytes(f</highlight><highlight class="stringliteral">&quot;{base_filename}_chan.fits&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec_bytes<sp/>=<sp/>await<sp/>_get_file_bytes(f</highlight><highlight class="stringliteral">&quot;{base_filename}_spec.txt&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO(austin):<sp/>read<sp/>about<sp/>transactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>async<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>conn.transaction():</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>result<sp/>is<sp/>a<sp/>list<sp/>of<sp/>conflicting<sp/>sources.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>await<sp/>db_source_match(conn,<sp/>run.run_id,<sp/>detect_dict,<sp/>run.sanity_thresholds[</highlight><highlight class="stringliteral">&apos;uncertainty_sigma&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>No<sp/>detections,<sp/>enter<sp/>detection<sp/>into<sp/>database</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(result)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logging.info(f</highlight><highlight class="stringliteral">&quot;No<sp/>duplicates,<sp/>Name:<sp/>{detect_dict[&apos;name&apos;]}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>db_detection_insert(conn,<sp/>run.run_id,<sp/>instance.instance_id,<sp/>detect_dict,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube_bytes,<sp/>mask_bytes,<sp/>mom0_bytes,<sp/>mom1_bytes,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mom2_bytes,<sp/>chan_bytes,<sp/>spec_bytes)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Handle<sp/>duplicate<sp/>detections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logging.info(f</highlight><highlight class="stringliteral">&quot;Duplicates,<sp/>Name:<sp/>{detect_dict[&apos;name&apos;]}<sp/>Details:<sp/>{len(result)}<sp/>hit(s)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resolved<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>db_detect<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>result:</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flux<sp/>=<sp/>(detect_dict[</highlight><highlight class="stringliteral">&apos;f_sum&apos;</highlight><highlight class="normal">],<sp/>db_detect[</highlight><highlight class="stringliteral">&apos;f_sum&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spatial<sp/>=<sp/>(detect_dict[</highlight><highlight class="stringliteral">&apos;ell_maj&apos;</highlight><highlight class="normal">],<sp/>db_detect[</highlight><highlight class="stringliteral">&apos;ell_maj&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detect_dict[</highlight><highlight class="stringliteral">&apos;ell_min&apos;</highlight><highlight class="normal">],<sp/>db_detect[</highlight><highlight class="stringliteral">&apos;ell_min&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spectral<sp/>=<sp/>(detect_dict[</highlight><highlight class="stringliteral">&apos;w20&apos;</highlight><highlight class="normal">],<sp/>db_detect[</highlight><highlight class="stringliteral">&apos;w20&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detect_dict[</highlight><highlight class="stringliteral">&apos;w50&apos;</highlight><highlight class="normal">],<sp/>db_detect[</highlight><highlight class="stringliteral">&apos;w50&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sanity_check_satisfied<sp/>=<sp/>sanity_check(flux,<sp/>spatial,<sp/>spectral,<sp/>run.sanity_thresholds)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sanity_check_satisfied:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detect_flag<sp/>=<sp/>detect_dict[</highlight><highlight class="stringliteral">&apos;flag&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>db_detect_flag<sp/>=<sp/>db_detect[</highlight><highlight class="stringliteral">&apos;flag&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Delete<sp/>automatically<sp/>if<sp/>flags<sp/>0<sp/>or<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>detect_flag<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>db_detect_flag<sp/>==<sp/>4:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logging.info(f</highlight><highlight class="stringliteral">&quot;Replacing,<sp/>Name:<sp/>{detect_dict[&apos;name&apos;]}<sp/>Details:<sp/>flag<sp/>4<sp/>with<sp/>flag<sp/>0&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>db_delete_detection(conn,<sp/>db_detect[</highlight><highlight class="stringliteral">&apos;id&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>db_detection_insert(conn,<sp/>run.run_id,<sp/>instance.instance_id,<sp/>detect_dict,<sp/>cube_bytes,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask_bytes,<sp/>mom0_bytes,<sp/>mom1_bytes,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mom2_bytes,<sp/>chan_bytes,<sp/>spec_bytes,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>db_detect[</highlight><highlight class="stringliteral">&apos;unresolved&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Random<sp/>selection<sp/>of<sp/>detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO(austin):<sp/>Update<sp/>this<sp/>according<sp/>to<sp/>Tobias&apos;<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>detect_flag<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>db_detect_flag<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>detect_flag<sp/>==<sp/>4<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>db_detect_flag<sp/>==<sp/>4:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bool(random.getrandbits(1))<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logging.info(f</highlight><highlight class="stringliteral">&quot;Replacing,<sp/>Name:<sp/>{detect_dict[&apos;name&apos;]}<sp/>Details:<sp/>flag<sp/>0<sp/>with<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;flag<sp/>0<sp/>or<sp/>flag<sp/>4<sp/>with<sp/>flag<sp/>4&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>db_delete_detection(conn,<sp/>db_detect[</highlight><highlight class="stringliteral">&apos;id&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>db_detection_insert(conn,<sp/>run.run_id,<sp/>instance.instance_id,<sp/>detect_dict,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube_bytes,<sp/>mask_bytes,<sp/>mom0_bytes,<sp/>mom1_bytes,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mom2_bytes,<sp/>chan_bytes,<sp/>spec_bytes,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>db_detect[</highlight><highlight class="stringliteral">&apos;unresolved&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Reconciled?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resolved<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Not<sp/>able<sp/>to<sp/>reconcile<sp/>automatically,<sp/>leave<sp/>for<sp/>manual<sp/>resolution<sp/>by<sp/>the<sp/>user.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>resolved<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logging.info(f</highlight><highlight class="stringliteral">&quot;Not<sp/>Resolved,<sp/>Name:<sp/>{detect_dict[&apos;name&apos;]}<sp/>Details:<sp/>Setting<sp/>to<sp/>unresolved&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>db_detection_insert(conn,<sp/>run.run_id,<sp/>instance.instance_id,<sp/>detect_dict,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube_bytes,<sp/>mask_bytes,<sp/>mom0_bytes,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mom1_bytes,<sp/>mom2_bytes,<sp/>chan_bytes,<sp/>spec_bytes,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>db_update_detection_unresolved(conn,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>[i[</highlight><highlight class="stringliteral">&apos;id&apos;</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>result])</highlight></codeline>
    </programlisting>
    <location file="/Users/she393/Dropbox/projects/RADEC/portal/SoFiAX/src/merge.py"/>
  </compounddef>
</doxygen>
